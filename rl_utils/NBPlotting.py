
import pandas as pd, matplotlib.pyplot as plt
from matplotlib.pyplot import figure

def g_comparing_values(df, nm_metrica, valor1, valor2):
    figure(figsize=(12, 7), dpi=80)
    df_plt = df[[nm_metrica, f'{valor1}', f'{valor2}']].copy()
    df_plt = df_plt.dropna()
    
    p = plt.plot(df_plt[nm_metrica], df_plt[f'{valor1}'], color='g', label=f'{valor1}')
    p = plt.plot(df_plt[nm_metrica], df_plt[f'{valor2}'], color='r', label=f'{valor2}')
    
    plt.xlabel(nm_metrica)
    plt.legend(loc="upper left")
    plt.ylabel("Policy Value")
    plt.title(f'Computing for {nm_metrica} values with Policies generated by {valor1} and {valor2} algorithms')
    plt.show()
    
    return plt

def g_comparing_dif_values(df, nm_metrica, valor1, valor2):
    df_plt = df[[nm_metrica, f'DIF_{valor2}']].copy()
    df_plt = df_plt.dropna()
    
    figure(figsize=(12, 7), dpi=80)
    p = plt.plot(df_plt[nm_metrica], [1 for i in range(len(df))], color='g', label='Target')
    p = plt.plot(df_plt[nm_metrica], df_plt[f'DIF_{valor2}'], color='r', label='Diff')
   
    plt.xlabel(nm_metrica)
    plt.ylabel("Policy Value")
    plt.legend(loc="upper left")
    plt.title(f'Differences for {nm_metrica} values with Policies generated by {valor1} and {valor2} algorithms')
    plt.show()
    
    return plt

def g_comparing_max_metric(df, nm_metrica, valor1):
    df_plt = df[[nm_metrica, f'{valor1}']].copy()
    df_plt = df_plt.dropna()
    
    figure(figsize=(12, 7), dpi=80)
    p = plt.plot(df_plt[nm_metrica], df_plt[f'{valor1}'], color='g', label=f'{valor1}')
    
    plt.xlabel(nm_metrica)
    plt.ylabel(valor1)
    plt.legend(loc="upper left")
    plt.title(f'Comparing values of {nm_metrica} with the respective of {valor1}')
    plt.show()
    
    return plt

def g_comparing_max_metrics(df1, df2, valor1, valor2):
    
    figure(figsize=(12, 7), dpi=80)
    try: p = plt.plot(df1[valor1], df1[f'{valor2}_MAX'], color='g', label='Lambda vs MAX K')
    except: p = plt.plot(df1[valor1], df1[f'{str(valor2).upper()}_MAX'], color='g', label='Lambda vs MAX K')
    
    try: p = plt.plot(df2[f'{valor1}_MAX'], df2[valor2], color='r', label='K vs MAX Lambda')
    except: p = plt.plot(df2[f'{str(valor1).upper()}_MAX'], df2[valor2], color='r', label='K vs MAX Lambda')
    
    plt.xlabel(valor1)
    plt.ylabel(valor2)
    plt.legend(loc="upper left")
    plt.title(f'Comparing values of {valor1} and {valor2}')
    plt.show()
    
    return plt

def g_all_points_max_metric(df, model1, model2):
    df_plt = df[[model1, model2]].copy()
    df_plt = df_plt.dropna()
    
    figure(figsize=(12, 7), dpi=80)
    p = plt.scatter(df_plt[model1], df_plt[model2], color='g')
    
    plt.xlabel(model1)
    plt.ylabel(model2)
    plt.title(f'Comparing all values of max {model2} with the respective of {model1}')
    plt.show()
    
    return plt

def plot_policy_value(policies, df_res, metric, y_lim_min=12, y_lim_max=100):
    f = figure(figsize=(12, 7), dpi=80)

    for policy in policies.keys():
        if int(policy.replace('Policy ', '')) > 6:
            plt.plot(df_res.index, df_res[policy], '-.', label=policy)
        else:
            plt.plot(df_res.index, df_res[policy], label=policy)

        plt.legend(loc="upper left")
        plt.xlabel(f"{metric}")
        plt.ylabel("Policy Value")

    plt.ylim([y_lim_min, y_lim_max])
    plt.title(f'{metric} Values')
    plt.show()